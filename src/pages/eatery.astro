---
import { getEatery } from '@api/eatery/getEatery';
import LinkSns from '@components/ui/LinkSns.astro';
import PageTitle from '@components/ui/PageTitle.astro';
import MediaQueryLogo from '@functionnal-components/ui/MediaQueryLogo';
import Layout from '@layouts/Layout.astro';
import type { TEatery } from '@libs/types';

const response = await getEatery({});
const contents = response.contents;

const snsLink = (item: TEatery, platform: 'Instagram' | 'Twitter') => {
	const platformLowerCase: 'instagram' | 'twitter' = platform.toLowerCase() as
		| 'instagram'
		| 'twitter';
	const platformUrl = item[`${platformLowerCase}Url`];
	const platformName = item[`${platformLowerCase}Name`];
	return { platformUrl, platformName };
};
---

<Layout headTitle={'飲食店ご紹介'}>
	<PageTitle titleJa="飲食店のご紹介" titleEn="introduce eateries" />
	{
		contents.map(item => (
			<article class="eatery">
				<MediaQueryLogo client:load imgUrl={item.image.url} title={item.title} />
				<h2>{item.title}</h2>
				<div class="eatery__sns">
					{item.sns.map(platform => (
						<LinkSns
							text={
								snsLink(item, platform).platformName !== undefined
									? snsLink(item, platform).platformName
									: platform
							}
							link={
								snsLink(item, platform).platformUrl !== undefined
									? snsLink(item, platform).platformUrl
									: '/'
							}
							image={`${platform}.svg`}
							imageAlt={platform}
						/>
					))}
				</div>
				<div>
					<p class="small-underline">{item.floor}</p>
					<div class="small-underline">
						<p>毎週{item.dayOff}曜日 定休</p>
						<p>{item.businessInfo}</p>
					</div>
				</div>
			</article>
		))
	}
</Layout>

<style lang="scss">
	.eatery__sns {
		margin: 60px 0;
	}
</style>
